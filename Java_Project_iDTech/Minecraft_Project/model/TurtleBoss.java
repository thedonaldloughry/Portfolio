// Date: 5/22/2014 5:30:19 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.DonLoughry.AllOfTheEverything.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class TurtleBoss extends ModelBase
{
  //fields
    ModelRenderer Head;
    ModelRenderer Neck;
    ModelRenderer BodyShapeFront;
    ModelRenderer BodyShapeBack;
    ModelRenderer ShoulderRightFront;
    ModelRenderer ShoulderLeftFront;
    ModelRenderer ShoulderRightBack;
    ModelRenderer ShoulderLeftBack;
    ModelRenderer LegRightFront;
    ModelRenderer LegLeftFront;
    ModelRenderer LegLeftBack;
    ModelRenderer LegRightBack;
    ModelRenderer TailFront;
    ModelRenderer TailMiddle;
    ModelRenderer TailBack;
    ModelRenderer HeadDetailOne;
    ModelRenderer HeadDetailTwo;
    ModelRenderer HeadDetailThree;
    ModelRenderer HeadDetailFour;
    ModelRenderer HeadDetailFive;
    ModelRenderer HeadDetailSix;
    ModelRenderer HeadDetailSeven;
    ModelRenderer HeadDetailEight;
    ModelRenderer HeadDetailNine;
    ModelRenderer HeadDetailTen;
    ModelRenderer HeadDetailEleven;
    ModelRenderer HeadDetailTwelve;
    ModelRenderer HeadDetail13;
    ModelRenderer HeadDetail14;
    ModelRenderer Piece1;
    ModelRenderer Piece2;
    ModelRenderer Piece3;
    ModelRenderer Piece4;
    ModelRenderer Piece5;
    ModelRenderer Piece6;
    ModelRenderer Piece7;
    ModelRenderer Piece8;
    ModelRenderer Piece9;
    ModelRenderer Piece10;
    ModelRenderer Piece11;
    ModelRenderer Piece12;
    ModelRenderer Piece13;
    ModelRenderer Piece14;
  
  public TurtleBoss()
  {
    textureWidth = 256;
    textureHeight = 256;
    
      Head = new ModelRenderer(this, 95, 198);
      Head.addBox(-3F, -4F, -5F, 14, 14, 18);
      Head.setRotationPoint(-4F, 6F, -49F);
      Head.setTextureSize(64, 32);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      Neck = new ModelRenderer(this, 94, 168);
      Neck.addBox(-2F, -2F, -2F, 14, 9, 19);
      Neck.setRotationPoint(-5F, 6F, -36F);
      Neck.setTextureSize(64, 32);
      Neck.mirror = true;
      setRotation(Neck, 0F, 0F, 0F);
      BodyShapeFront = new ModelRenderer(this, 64, 115);
      BodyShapeFront.addBox(-1F, -1F, -1F, 32, 18, 32);
      BodyShapeFront.setRotationPoint(-15F, -2F, -18F);
      BodyShapeFront.setTextureSize(64, 32);
      BodyShapeFront.mirror = true;
      setRotation(BodyShapeFront, 0F, 0F, 0F);
      BodyShapeBack = new ModelRenderer(this, 80, 79);
      BodyShapeBack.addBox(-1F, -1F, -1F, 30, 15, 18);
      BodyShapeBack.setRotationPoint(-14F, 1F, 14F);
      BodyShapeBack.setTextureSize(64, 32);
      BodyShapeBack.mirror = true;
      setRotation(BodyShapeBack, 0F, 0F, 0F);
      ShoulderRightFront = new ModelRenderer(this, 7, 140);
      ShoulderRightFront.addBox(-1F, -1F, -1F, 14, 11, 13);
      ShoulderRightFront.setRotationPoint(-29F, 5F, -15F);
      ShoulderRightFront.setTextureSize(64, 32);
      ShoulderRightFront.mirror = true;
      setRotation(ShoulderRightFront, 0F, 0F, 0F);
      ShoulderLeftFront = new ModelRenderer(this, 195, 140);
      ShoulderLeftFront.addBox(0F, 0F, 0F, 14, 11, 13);
      ShoulderLeftFront.setRotationPoint(16F, 4F, -16F);
      ShoulderLeftFront.setTextureSize(64, 32);
      ShoulderLeftFront.mirror = true;
      setRotation(ShoulderLeftFront, 0F, 0F, 0F);
      ShoulderRightBack = new ModelRenderer(this, 32, 81);
      ShoulderRightBack.addBox(0F, 0F, 0F, 12, 9, 11);
      ShoulderRightBack.setRotationPoint(-27F, 6F, 18F);
      ShoulderRightBack.setTextureSize(64, 32);
      ShoulderRightBack.mirror = true;
      setRotation(ShoulderRightBack, 0F, 0F, 0F);
      ShoulderLeftBack = new ModelRenderer(this, 178, 81);
      ShoulderLeftBack.addBox(0F, 0F, 0F, 12, 9, 11);
      ShoulderLeftBack.setRotationPoint(15F, 6F, 18F);
      ShoulderLeftBack.setTextureSize(64, 32);
      ShoulderLeftBack.mirror = true;
      setRotation(ShoulderLeftBack, 0F, 0F, 0F);
      LegRightFront = new ModelRenderer(this, 15, 165);
      LegRightFront.addBox(-1F, -1F, -1F, 8, 22, 9);
      LegRightFront.setRotationPoint(-31F, 9F, -13F);
      LegRightFront.setTextureSize(64, 32);
      LegRightFront.mirror = true;
      setRotation(LegRightFront, 0F, 0F, 0F);
      LegLeftFront = new ModelRenderer(this, 204, 165);
      LegLeftFront.addBox(0F, 0F, 0F, 8, 22, 9);
      LegLeftFront.setRotationPoint(24F, 8F, -14F);
      LegLeftFront.setTextureSize(64, 32);
      LegLeftFront.mirror = true;
      setRotation(LegLeftFront, 0F, 0F, 0F);
      LegLeftBack = new ModelRenderer(this, 184, 47);
      LegLeftBack.addBox(0F, 0F, 0F, 8, 22, 9);
      LegLeftBack.setRotationPoint(21F, 8F, 19F);
      LegLeftBack.setTextureSize(64, 32);
      LegLeftBack.mirror = true;
      setRotation(LegLeftBack, 0F, 0F, 0F);
      LegRightBack = new ModelRenderer(this, 37, 47);
      LegRightBack.addBox(0F, 0F, 0F, 8, 22, 9);
      LegRightBack.setRotationPoint(-29F, 8F, 19F);
      LegRightBack.setTextureSize(64, 32);
      LegRightBack.mirror = true;
      setRotation(LegRightBack, 0F, 0F, 0F);
      TailFront = new ModelRenderer(this, 107, 58);
      TailFront.addBox(-1F, -1F, -1F, 11, 9, 11);
      TailFront.setRotationPoint(-4F, 6F, 32F);
      TailFront.setTextureSize(64, 32);
      TailFront.mirror = true;
      setRotation(TailFront, 0F, 0F, 0F);
      TailMiddle = new ModelRenderer(this, 107, 36);
      TailMiddle.addBox(0F, 0F, 0F, 7, 5, 16);
      TailMiddle.setRotationPoint(-3F, 8F, 42F);
      TailMiddle.setTextureSize(64, 32);
      TailMiddle.mirror = true;
      setRotation(TailMiddle, -0.3717861F, 0F, 0F);
      TailBack = new ModelRenderer(this, 109, 16);
      TailBack.addBox(0F, 0F, 0F, 5, 2, 16);
      TailBack.setRotationPoint(-2F, 15F, 56F);
      TailBack.setTextureSize(64, 32);
      TailBack.mirror = true;
      setRotation(TailBack, -0.8922867F, 0F, 0F);
      HeadDetailOne = new ModelRenderer(this, 74, 232);
      HeadDetailOne.addBox(-1F, -1F, -1F, 2, 2, 2);
      HeadDetailOne.setRotationPoint(6F, 1F, -55F);
      HeadDetailOne.setTextureSize(64, 32);
      HeadDetailOne.mirror = true;
      setRotation(HeadDetailOne, 0F, 0F, 0F);
      HeadDetailTwo = new ModelRenderer(this, 86, 232);
      HeadDetailTwo.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetailTwo.setRotationPoint(1F, 0F, -56F);
      HeadDetailTwo.setTextureSize(64, 32);
      HeadDetailTwo.mirror = true;
      setRotation(HeadDetailTwo, 0F, 0F, 0F);
      HeadDetailThree = new ModelRenderer(this, 99, 232);
      HeadDetailThree.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetailThree.setRotationPoint(-3F, 0F, -56F);
      HeadDetailThree.setTextureSize(64, 32);
      HeadDetailThree.mirror = true;
      setRotation(HeadDetailThree, 0F, 0F, 0F);
      HeadDetailFour = new ModelRenderer(this, 110, 232);
      HeadDetailFour.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetailFour.setRotationPoint(-7F, 0F, -56F);
      HeadDetailFour.setTextureSize(64, 32);
      HeadDetailFour.mirror = true;
      setRotation(HeadDetailFour, 0F, 0F, 0F);
      HeadDetailFive = new ModelRenderer(this, 122, 232);
      HeadDetailFive.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetailFive.setRotationPoint(-7F, 0F, -52F);
      HeadDetailFive.setTextureSize(64, 32);
      HeadDetailFive.mirror = true;
      setRotation(HeadDetailFive, 0F, 0F, 0F);
      HeadDetailSix = new ModelRenderer(this, 133, 232);
      HeadDetailSix.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetailSix.setRotationPoint(-7F, 0F, -48F);
      HeadDetailSix.setTextureSize(64, 32);
      HeadDetailSix.mirror = true;
      setRotation(HeadDetailSix, 0F, 0F, 0F);
      HeadDetailSeven = new ModelRenderer(this, 144, 232);
      HeadDetailSeven.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetailSeven.setRotationPoint(-7F, 0F, -44F);
      HeadDetailSeven.setTextureSize(64, 32);
      HeadDetailSeven.mirror = true;
      setRotation(HeadDetailSeven, 0F, 0F, 0F);
      HeadDetailEight = new ModelRenderer(this, 155, 232);
      HeadDetailEight.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetailEight.setRotationPoint(-7F, 0F, -40F);
      HeadDetailEight.setTextureSize(64, 32);
      HeadDetailEight.mirror = true;
      setRotation(HeadDetailEight, 0F, 0F, 0F);
      HeadDetailNine = new ModelRenderer(this, 166, 232);
      HeadDetailNine.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetailNine.setRotationPoint(-3F, 0F, -40F);
      HeadDetailNine.setTextureSize(64, 32);
      HeadDetailNine.mirror = true;
      setRotation(HeadDetailNine, 0F, 0F, 0F);
      HeadDetailTen = new ModelRenderer(this, 177, 232);
      HeadDetailTen.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetailTen.setRotationPoint(1F, 0F, -40F);
      HeadDetailTen.setTextureSize(64, 32);
      HeadDetailTen.mirror = true;
      setRotation(HeadDetailTen, 0F, 0F, 0F);
      HeadDetailEleven = new ModelRenderer(this, 188, 232);
      HeadDetailEleven.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetailEleven.setRotationPoint(5F, 0F, -40F);
      HeadDetailEleven.setTextureSize(64, 32);
      HeadDetailEleven.mirror = true;
      setRotation(HeadDetailEleven, 0F, 0F, 0F);
      HeadDetailTwelve = new ModelRenderer(this, 199, 232);
      HeadDetailTwelve.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetailTwelve.setRotationPoint(5F, 0F, -44F);
      HeadDetailTwelve.setTextureSize(64, 32);
      HeadDetailTwelve.mirror = true;
      setRotation(HeadDetailTwelve, 0F, 0F, 0F);
      HeadDetail13 = new ModelRenderer(this, 209, 232);
      HeadDetail13.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetail13.setRotationPoint(5F, 0F, -48F);
      HeadDetail13.setTextureSize(64, 32);
      HeadDetail13.mirror = true;
      setRotation(HeadDetail13, 0F, 0F, 0F);
      HeadDetail14 = new ModelRenderer(this, 219, 232);
      HeadDetail14.addBox(0F, 0F, 0F, 2, 2, 2);
      HeadDetail14.setRotationPoint(5F, 0F, -52F);
      HeadDetail14.setTextureSize(64, 32);
      HeadDetail14.mirror = true;
      setRotation(HeadDetail14, 0F, 0F, 0F);
    Piece1 = new ModelRenderer(this, "Piece1");
    Piece1.setRotationPoint(6F, 1F, -55F);
    setRotation(Piece1, 0F, 0F, 0F);
    Piece1.mirror = true;
    Piece2 = new ModelRenderer(this, "Piece2");
    Piece2.setRotationPoint(1F, 0F, -56F);
    setRotation(Piece2, 0F, 0F, 0F);
    Piece2.mirror = true;
    Piece3 = new ModelRenderer(this, "Piece3");
    Piece3.setRotationPoint(-3F, 0F, -56F);
    setRotation(Piece3, 0F, 0F, 0F);
    Piece3.mirror = true;
    Piece4 = new ModelRenderer(this, "Piece4");
    Piece4.setRotationPoint(-7F, 0F, -56F);
    setRotation(Piece4, 0F, 0F, 0F);
    Piece4.mirror = true;
    Piece5 = new ModelRenderer(this, "Piece5");
    Piece5.setRotationPoint(-7F, 0F, -52F);
    setRotation(Piece5, 0F, 0F, 0F);
    Piece5.mirror = true;
    Piece6 = new ModelRenderer(this, "Piece6");
    Piece6.setRotationPoint(-7F, 0F, -48F);
    setRotation(Piece6, 0F, 0F, 0F);
    Piece6.mirror = true;
    Piece7 = new ModelRenderer(this, "Piece7");
    Piece7.setRotationPoint(-7F, 0F, -44F);
    setRotation(Piece7, 0F, 0F, 0F);
    Piece7.mirror = true;
    Piece8 = new ModelRenderer(this, "Piece8");
    Piece8.setRotationPoint(-7F, 0F, -40F);
    setRotation(Piece8, 0F, 0F, 0F);
    Piece8.mirror = true;
    Piece9 = new ModelRenderer(this, "Piece9");
    Piece9.setRotationPoint(-3F, 0F, -40F);
    setRotation(Piece9, 0F, 0F, 0F);
    Piece9.mirror = true;
    Piece10 = new ModelRenderer(this, "Piece10");
    Piece10.setRotationPoint(1F, 0F, -40F);
    setRotation(Piece10, 0F, 0F, 0F);
    Piece10.mirror = true;
    Piece11 = new ModelRenderer(this, "Piece11");
    Piece11.setRotationPoint(5F, 0F, -40F);
    setRotation(Piece11, 0F, 0F, 0F);
    Piece11.mirror = true;
    Piece12 = new ModelRenderer(this, "Piece12");
    Piece12.setRotationPoint(5F, 0F, -44F);
    setRotation(Piece12, 0F, 0F, 0F);
    Piece12.mirror = true;
    Piece13 = new ModelRenderer(this, "Piece13");
    Piece13.setRotationPoint(5F, 0F, -48F);
    setRotation(Piece13, 0F, 0F, 0F);
    Piece13.mirror = true;
    Piece14 = new ModelRenderer(this, "Piece14");
    Piece14.setRotationPoint(5F, 0F, -52F);
    setRotation(Piece14, 0F, 0F, 0F);
    Piece14.mirror = true;
    Head.addChild(HeadDetailOne);
    Head.addChild(HeadDetailTwo);
    Head.addChild(HeadDetailThree);
    Head.addChild(HeadDetailFour);
    Head.addChild(HeadDetailFive);
    Head.addChild(HeadDetailSix);
    Head.addChild(HeadDetailSeven);
    Head.addChild(HeadDetailEight);
    Head.addChild(HeadDetailNine);
    Head.addChild(HeadDetailTen);
    Head.addChild(HeadDetailEleven);
    Head.addChild(HeadDetailTwelve);
    Head.addChild(HeadDetail13);
    Head.addChild(HeadDetail14);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Head.render(f5);
    Neck.render(f5);
    BodyShapeFront.render(f5);
    BodyShapeBack.render(f5);
    ShoulderRightFront.render(f5);
    ShoulderLeftFront.render(f5);
    ShoulderRightBack.render(f5);
    ShoulderLeftBack.render(f5);
    LegRightFront.render(f5);
    LegLeftFront.render(f5);
    LegLeftBack.render(f5);
    LegRightBack.render(f5);
    TailFront.render(f5);
    TailMiddle.render(f5);
    TailBack.render(f5);
    /*HeadDetailOne.render(f5);
    HeadDetailTwo.render(f5);
    HeadDetailThree.render(f5);
    HeadDetailFour.render(f5);
    HeadDetailFive.render(f5);
    HeadDetailSix.render(f5);
    HeadDetailSeven.render(f5);
    HeadDetailEight.render(f5);
    HeadDetailNine.render(f5);
    HeadDetailTen.render(f5);
    HeadDetailEleven.render(f5);
    HeadDetailTwelve.render(f5);
    HeadDetail13.render(f5);
    HeadDetail14.render(f5);*/
    Piece1.render(f5);
    Piece2.render(f5);
    Piece3.render(f5);
    Piece4.render(f5);
    Piece5.render(f5);
    Piece6.render(f5);
    Piece7.render(f5);
    Piece8.render(f5);
    Piece9.render(f5);
    Piece10.render(f5);
    Piece11.render(f5);
    Piece12.render(f5);
    Piece13.render(f5);
    Piece14.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
	/*Note: different types of models use different versions of this function. People have randomly posted this 
	 * code online, but from various sources. Google it is the best thing I could tell you, unfortunately.
	 * Here, at least, is the code to animate a quadruped. Like a cow or something. */
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Head.rotateAngleX = -(f4 / 57.29578F);
    Head.rotateAngleY = f3 / 57.29578F;
    
    BodyShapeFront.rotateAngleX = 0.0F; // we don't really want to rotate the body.
    LegRightFront.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    LegLeftFront.rotateAngleX = MathHelper.cos(f * 0.6662F + 3.141593F) * 1.4F * f1;
    LegRightBack.rotateAngleX = MathHelper.cos(f * 0.6662F + 3.141593F) * 1.4F * f1;
    LegLeftBack.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
  }

}
